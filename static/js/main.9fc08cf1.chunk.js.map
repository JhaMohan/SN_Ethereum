{"version":3,"sources":["components/Navbar.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","href","target","rel","id","style","color","fontWeight","this","props","account","width","height","src","concat","Identicon","toString","Component","Main","_this","role","maxWidth","onSubmit","event","content","postContent","value","createPost","type","ref","input","placeholder","required","posts","map","post","key","author","window","web3","utils","fromWei","tipAmount","onClick","tipPost","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","socialNetwork","postCount","loading","bind","assertThisInitialized","loadWeb3","loadBlockchainData","ethereum","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","console","log","setState","getId","networkId","networkData","SocialNetwork","networks","Contract","abi","address","methods","i","toConsumableArray","sort","b","send","from","on","hash","confirmationNumber","receipt","location","reload","_id","toWei","components_Navbar","components_Main","Boolean","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9fc08cf1.chunk.js","sourcesContent":["import React, {component, Component } from 'react';\nimport Identicon from 'identicon.js';\n\nclass Navbar extends Component {\n\n    render() {\n        return (\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <a\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n            href=\"src/logo.png\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            BlogOnBlock\n          </a>\n          <ul className=\"navbar-nav px-3\">\n            <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n              <small className=\"text-secondary\">\n                <small  id=\"account\" style={{ color: 'white',fontWeight: 'bold' }} >{this.props.account}</small>\n              </small>\n              { this.props.account \n                ?\n              <img \n                className='ml-2'\n                width='30'\n                height='30'\n                src={`data:image/png;base64,${new Identicon(this.props.account,30).toString()}`}\n              />\n              :<span></span> \n             }       \n            </li>\n          </ul>\n        </nav>\n        );\n    }\n}\n\n\nexport default Navbar;","import React, {component, Component } from 'react';\nimport Identicon from 'identicon.js';\n\nclass Main extends Component {\n\n    render() {\n        return (\n          \n            <div className=\"container-fluid mt-5\">\n            <div className=\"row\">\n              <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{maxWidth:'500px'}}>\n                <div className=\"content mr-auto ml-auto\">\n                <p>&nbsp;</p> \n                <form onSubmit={(event) => {\n                    const content = this.postContent.value\n                    this.props.createPost(content)\n                 }}>\n                    <div className=\"form-group mr-sm-2\">\n                        <input \n                          id=\"postContent\"\n                          type=\"text\"\n                          ref={(input)=>{this.postContent = input}}\n                          className=\"form-control\"\n                          placeholder=\"What's on your mind?\"\n                          required />\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary btn-block\">Share</button>\n                </form>\n                <p>&nbsp;</p>\n                  {this.props.posts.map((post,key)=>{\n\n                      return (\n                        <div className=\"card mb-4\" key={key}>   \n                          <div className=\"card-header\">\n                              \n                          <img \n                            className='mr-2'\n                            width='30'\n                            height='30'\n                            src={`data:image/png;base64,${new Identicon(post.author,30).toString()}`}\n                          />\n                        <small className=\"text-muted\">{post.author}</small>\n                          </div>\n                          <ul id=\"postList\" className=\"list-group list-group-flush\">\n                            <li className=\"list-group-item\">\n                                {post.content}\n                            </li>\n                            <li key={key} className=\"list-group-item py-2\">\n                              <small className=\"float-left mt-1 text-muted\">\n                                TIPS: {window.web3.utils.fromWei(post.tipAmount.toString(),'ether')} ETH\n                              </small>\n                              <button className=\"btn btn-link btn-sm float-right pt-0\"\n                                 onClick={(event)=>{\n                                     this.props.tipPost(post.id)\n                                 }}\n                              >\n                                <span>\n                                  TIP 0.1 ETH\n                                </span>\n                              </button>\n                            </li>\n                          </ul>\n                        </div>\n                      )\n                  })}\n                </div>\n              </main>\n            </div>\n          </div>  \n\n        );\n    }\n}\n\n\nexport default Main;","import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Main from './Main'\nimport SocialNetwork from '../abis/SocialNetwork.json'\n\n\nclass App extends Component {\n\nasync componentWillMount() {\n  await this.loadWeb3()\n  await this.loadBlockchainData()\n}\n\n\n\nasync loadWeb3() {\n\n  if(window.ethereum) {\n    window.web3 = new Web3(window.ethereum)\n    await window.ethereum.enable()\n  }\n  else if (window.web3) {\n    window.web3 = new Web3(window.web3.currentProvider)\n  }\n  else {\n    window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n  }\n\n}\n\n\nasync loadBlockchainData() {\n  const web3 = window.web3\n\n  //Load account \n  const accounts = await web3.eth.getAccounts()\n  console.log(accounts)\n  this.setState({account: accounts[0]})\n\n   //networkId\n   const networkId = await web3.eth.getId()\n  //  console.log(networkId)\n  //  console.log(SocialNetwork.networks[networkId])\n\n   const networkData = SocialNetwork.networks[networkId]\n  //Address\n  if(networkData) {\n    const socialNetwork = web3.eth.Contract(SocialNetwork.abi,networkData.address)\n    // console.log(socialNetwork)\n    this.setState({socialNetwork})\n    const postCount = await socialNetwork.methods.postCount().call()\n    this.setState({postCount})\n    // console.log(postCount)\n\n    //Load post\n    for(var i =1; i<= postCount; i++) {\n      const post = await socialNetwork.methods.posts(i).call()\n      this.setState({\n        posts:[...this.state.posts,post]\n      })\n    }\n    // console.log({posts:this.state.posts})\n\n    //sort the post by their tip amount\n\n    this.setState({\n      posts: this.state.posts.sort((a,b)=> b.tipAmount - a.tipAmount)\n    })\n\n    this.setState({loading:false})\n\n  }else {\n    console.log('Social Network contract not deployed to detect network')\n  }\n\n  \n\n\n}\n\ncreatePost(content) {\n  this.setState({ loading: true })\n  this.state.socialNetwork.methods\n    .createPost(content)\n    .send({ from: this.state.account })\n    .on('transactionHash', function(hash){\n       console.log(hash)\n     })\n    .on('confirmation', function(confirmationNumber, receipt){\n      console.log(confirmationNumber)\n      console.log(receipt)\n      window.location.reload();\n    })\n}\n\n\n\ntipPost(_id) {\n  this.setState({ loading: true })\n  this.state.socialNetwork.methods\n    .tipPost(_id)\n    .send({ from: this.state.account, value: window.web3.utils.toWei('0.1','ether')})\n    .on('transactionHash', function(hash){\n       console.log(hash)\n     })\n    .on('confirmation', function(confirmationNumber, receipt){\n      console.log(confirmationNumber)\n      console.log(receipt)\n      window.location.reload();\n    })\n}\n\n\n\nconstructor(props) {\n  super(props)\n  this.state = {\n    account: '',\n    socialNetwork: null,\n    postCount: 0,\n    posts: [],\n    loading: true\n  }\n\n  this.createPost = this.createPost.bind(this)\n  this.tipPost = this.tipPost.bind(this)\n \n}\n\n\n  render() {\n    return (\n      <div>\n        <Navbar account ={this.state.account}/>\n        { this.state.loading \n          ? <div id =\"loader\" className=\"text-center mt-5\"><p>loading.......</p></div>\n          :\n          <Main \n               posts = {this.state.posts}\n               createPost= {this.createPost}\n               tipPost = {this.tipPost}\n          />\n        }\n        \n     </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}